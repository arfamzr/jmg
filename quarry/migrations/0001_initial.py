# Generated by Django 3.1.2 on 2020-11-04 21:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import quarry.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('account', '0002_auto_20201031_1714'),
    ]

    operations = [
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('JHR', 'Johor'), ('KDH', 'Kedah'), ('KTN', 'Kelantan'), ('MLK', 'Melaka'), ('NSN', 'Negeri Sembilan'), ('PHG', 'Pahang'), ('PNG', 'Pulau Pinang'), ('PRK', 'Perak'), ('PLS', 'Perlis'), ('SBH', 'Sabah'), ('SWK', 'Sarawak'), ('SGR', 'Selangor'), ('TRG', 'Terengganu'), ('KUL', 'Kuala Lumpur'), ('LBN', 'Labuan'), ('PJY', 'Putrajaya')], max_length=3, verbose_name='negeri')),
                ('month', models.PositiveIntegerField(choices=[(1, 'Januari'), (2, 'Februari'), (3, 'Mac'), (4, 'April'), (5, 'Mei'), (6, 'Jun'), (7, 'Julai'), (8, 'Ogos'), (9, 'September'), (10, 'Oktober'), (11, 'November'), (12, 'Disember')], verbose_name='bulan')),
                ('year', models.PositiveIntegerField(choices=[(2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020)], default=quarry.models.current_year, verbose_name='tahun')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'data pengusaha kuari',
                'verbose_name_plural': 'data pengusaha kuari',
            },
        ),
        migrations.CreateModel(
            name='LeaseHolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nama')),
                ('lease_number', models.CharField(max_length=25, verbose_name='no pajakan')),
                ('address1', models.CharField(max_length=255, verbose_name='alamat')),
                ('address2', models.CharField(blank=True, max_length=255, verbose_name='alamat (line 2)')),
                ('address3', models.CharField(blank=True, max_length=255, verbose_name='alamat (line 3)')),
                ('state', models.CharField(choices=[('JHR', 'Johor'), ('KDH', 'Kedah'), ('KTN', 'Kelantan'), ('MLK', 'Melaka'), ('NSN', 'Negeri Sembilan'), ('PHG', 'Pahang'), ('PNG', 'Pulau Pinang'), ('PRK', 'Perak'), ('PLS', 'Perlis'), ('SBH', 'Sabah'), ('SWK', 'Sarawak'), ('SGR', 'Selangor'), ('TRG', 'Terengganu'), ('KUL', 'Kuala Lumpur'), ('LBN', 'Labuan'), ('PJY', 'Putrajaya')], max_length=3, verbose_name='negeri')),
                ('area', models.CharField(blank=True, max_length=50, verbose_name='keluasan')),
                ('lease_expired', models.DateField(verbose_name='tarikh tamat pajakan')),
                ('status', models.BooleanField(default=True, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'pemajak kuari',
                'verbose_name_plural': 'pemajak kuari',
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nama syarikat')),
                ('address1', models.CharField(max_length=255, verbose_name='alamat')),
                ('address2', models.CharField(blank=True, max_length=255, verbose_name='alamat (line 2)')),
                ('address3', models.CharField(blank=True, max_length=255, verbose_name='alamat (line 3)')),
                ('phone', models.CharField(max_length=50, verbose_name='no phone')),
                ('fax', models.CharField(max_length=50, verbose_name='no fax')),
                ('email', models.CharField(max_length=255, verbose_name='emel')),
                ('status', models.BooleanField(default=True, verbose_name='status')),
                ('state', models.CharField(choices=[('JHR', 'Johor'), ('KDH', 'Kedah'), ('KTN', 'Kelantan'), ('MLK', 'Melaka'), ('NSN', 'Negeri Sembilan'), ('PHG', 'Pahang'), ('PNG', 'Pulau Pinang'), ('PRK', 'Perak'), ('PLS', 'Perlis'), ('SBH', 'Sabah'), ('SWK', 'Sarawak'), ('SGR', 'Selangor'), ('TRG', 'Terengganu'), ('KUL', 'Kuala Lumpur'), ('LBN', 'Labuan'), ('PJY', 'Putrajaya')], max_length=3, verbose_name='negeri')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'pengusaha kuari',
                'verbose_name_plural': 'pengusaha kuari',
            },
        ),
        migrations.CreateModel(
            name='ElectricMachinery',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('number_lorry', models.IntegerField(verbose_name='bilangan lori')),
                ('lorry_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa lori')),
                ('number_excavator', models.IntegerField(verbose_name='bilangan jenkorek')),
                ('excavator_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa jenkorek')),
                ('number_wheel_loader', models.IntegerField(verbose_name='bilangan jentera angkut beroda')),
                ('wheel_loader_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa jentera angkut beroda')),
                ('number_bulldozer', models.IntegerField(verbose_name='bilangan jentolak')),
                ('bulldozer_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa jentolak')),
                ('number_water_pump', models.IntegerField(verbose_name='bilangan pam air')),
                ('water_pump_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa pam air')),
                ('number_air_compressor', models.IntegerField(verbose_name='bilangan pemampat udara')),
                ('air_compressor_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa pemampat udara')),
                ('number_hydraulic_breaker', models.IntegerField(verbose_name='bilangan pemecah hidraulik')),
                ('hydraulic_breaker_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa pemecah hidraulik')),
                ('number_hydraulic_drill', models.IntegerField(verbose_name='bilangan gerudi hidraulik')),
                ('hydraulic_drill_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa gerudi hidraulik')),
                ('number_crusher', models.IntegerField(verbose_name='bilangan penghancur')),
                ('crusher_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa penghancur')),
                ('number_shovel', models.IntegerField(verbose_name='bilangan penyuduk')),
                ('shovel_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa penyuduk')),
                ('number_tracktor', models.IntegerField(verbose_name='bilangan traktor')),
                ('tracktor_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa traktor')),
                ('number_other', models.IntegerField(verbose_name='bilangan lain')),
                ('other_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa lain')),
                ('state_other', models.TextField(blank=True, verbose_name='nyatakan lain')),
                ('total_number', models.IntegerField(verbose_name='jumlah bilangan')),
                ('total_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah_kuasa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'jentera elektrik',
                'verbose_name_plural': 'jentera elektrik',
            },
        ),
        migrations.CreateModel(
            name='EnergySupply',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('total_diesel', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah diesel')),
                ('total_electric', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah elektrik')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'bahan tenaga',
                'verbose_name_plural': 'bahan tenaga',
            },
        ),
        migrations.CreateModel(
            name='ExportFinalUses',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('construction_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun pembinaan')),
                ('construction_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai pembinaan')),
                ('dimension_stone_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun batu dimensi')),
                ('dimension_stone_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai batu dimensi')),
                ('cement_making_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun pembuatan simen')),
                ('cement_making_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai pembuatan simen')),
                ('quicklime_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun kapur tohor')),
                ('quicklime_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai kapur tohor')),
                ('calcium_carbonate_powder_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun serbuk kalsium karbonat')),
                ('calcium_carbonate_powder_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai serbuk kalsium karbonat')),
                ('premix_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun premix')),
                ('premix_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai premix')),
                ('ready_mix_concrete_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun konkrit readymix')),
                ('ready_mix_concrete_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai konkrit readymix')),
                ('fertilizer_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun baja')),
                ('fertilizer_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai baja')),
                ('steel_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun industri keluli')),
                ('steel_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai industri keluli')),
                ('hydrated_lime_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun kapur hidrat')),
                ('hydrated_lime_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai kapur hidrat')),
                ('dolomite_powder_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun serbuk dolomit')),
                ('dolomite_powder_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai serbuk dolomit')),
                ('terrazo_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun terazo')),
                ('terrazo_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai terazo')),
                ('other_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun lain')),
                ('other_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai lain')),
                ('state_other', models.TextField(blank=True, verbose_name='nyatakan lain')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'kegunaan akhir eksport',
                'verbose_name_plural': 'kegunaan akhir eksport',
            },
        ),
        migrations.CreateModel(
            name='ForeignContractor',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('male_manager', models.IntegerField(verbose_name='pengurus lelaki')),
                ('female_manager', models.IntegerField(verbose_name='pengurus perempuan')),
                ('male_professional', models.IntegerField(verbose_name='profesional lelaki')),
                ('female_professional', models.IntegerField(verbose_name='profesional perempuan')),
                ('male_technical', models.IntegerField(verbose_name='teknikal lelaki')),
                ('female_technical', models.IntegerField(verbose_name='teknikal perempuan')),
                ('male_clerk', models.IntegerField(verbose_name='kerani lelaki')),
                ('female_clerk', models.IntegerField(verbose_name='kerani perempuan')),
                ('male_labor', models.IntegerField(verbose_name='buruh lelaki')),
                ('female_labor', models.IntegerField(verbose_name='buruh perempuan')),
                ('total_male', models.IntegerField(verbose_name='jumlah lelaki')),
                ('total_female', models.IntegerField(verbose_name='jumlah perempuan')),
                ('total_male_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah upah gaji lelaki')),
                ('total_female_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah upah gaji perempuan')),
                ('male_man_hour', models.IntegerField(verbose_name='jam manusia lelaki')),
                ('female_man_hour', models.IntegerField(verbose_name='jam manusia perempuan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'kontraktor asing',
                'verbose_name_plural': 'kontraktor asing',
            },
        ),
        migrations.CreateModel(
            name='ForeignOperator',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('male_manager', models.IntegerField(verbose_name='pengurus lelaki')),
                ('female_manager', models.IntegerField(verbose_name='pengurus perempuan')),
                ('male_professional', models.IntegerField(verbose_name='profesional lelaki')),
                ('female_professional', models.IntegerField(verbose_name='profesional perempuan')),
                ('male_technical', models.IntegerField(verbose_name='teknikal lelaki')),
                ('female_technical', models.IntegerField(verbose_name='teknikal perempuan')),
                ('male_clerk', models.IntegerField(verbose_name='kerani lelaki')),
                ('female_clerk', models.IntegerField(verbose_name='kerani perempuan')),
                ('male_labor', models.IntegerField(verbose_name='buruh lelaki')),
                ('female_labor', models.IntegerField(verbose_name='buruh perempuan')),
                ('total_female', models.IntegerField(verbose_name='jumlah perempuan')),
                ('total_male', models.IntegerField(verbose_name='jumlah lelaki')),
                ('total_male_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah upah gaji lelaki')),
                ('total_female_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah upah gaji perempuan')),
                ('male_man_hour', models.IntegerField(verbose_name='jam manusia lelaki')),
                ('female_man_hour', models.IntegerField(verbose_name='jam manusia perempuan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'operator asing',
                'verbose_name_plural': 'operator asing',
            },
        ),
        migrations.CreateModel(
            name='InternalCombustionMachinery',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('number_lorry', models.IntegerField(verbose_name='bilangan lori')),
                ('lorry_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa lori')),
                ('number_excavator', models.IntegerField(verbose_name='bilangan jenkorek')),
                ('excavator_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa jenkorek')),
                ('number_wheel_loader', models.IntegerField(verbose_name='bilangan jentera angkut beroda')),
                ('wheel_loader_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa jentera angkut beroda')),
                ('number_bulldozer', models.IntegerField(verbose_name='bilangan jentolak')),
                ('bulldozer_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa jentolak')),
                ('number_water_pump', models.IntegerField(verbose_name='bilangan pam air')),
                ('water_pump_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa pam air')),
                ('number_air_compressor', models.IntegerField(verbose_name='bilangan pemampat udara')),
                ('air_compressor_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa pemampat udara')),
                ('number_hydraulic_breaker', models.IntegerField(verbose_name='bilangan pemecah hidraulik')),
                ('hydraulic_breaker_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa pemecah hidraulik')),
                ('number_hydraulic_drill', models.IntegerField(verbose_name='bilangan gerudi hidraulik')),
                ('hydraulic_drill_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa gerudi hidraulik')),
                ('number_crusher', models.IntegerField(verbose_name='bilangan penghancur')),
                ('crusher_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa penghancur')),
                ('number_shovel', models.IntegerField(verbose_name='bilangan penyuduk')),
                ('shovel_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa penyuduk')),
                ('number_tracktor', models.IntegerField(verbose_name='bilangan traktor')),
                ('tracktor_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa traktor')),
                ('number_other', models.IntegerField(verbose_name='bilangan lain')),
                ('other_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kuasa lain')),
                ('state_other', models.TextField(blank=True, verbose_name='nyatakan lain')),
                ('total_number', models.IntegerField(verbose_name='jumlah bilangan')),
                ('total_power', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah_kuasa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'jentera bakar dalam',
                'verbose_name_plural': 'jentera bakar dalam',
            },
        ),
        migrations.CreateModel(
            name='LocalContractor',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('male_manager', models.IntegerField(verbose_name='pengurus lelaki')),
                ('female_manager', models.IntegerField(verbose_name='pengurus perempuan')),
                ('male_professional', models.IntegerField(verbose_name='profesional lelaki')),
                ('female_professional', models.IntegerField(verbose_name='profesional perempuan')),
                ('male_technical', models.IntegerField(verbose_name='teknikal lelaki')),
                ('female_technical', models.IntegerField(verbose_name='teknikal perempuan')),
                ('male_clerk', models.IntegerField(verbose_name='kerani lelaki')),
                ('female_clerk', models.IntegerField(verbose_name='kerani perempuan')),
                ('male_labor', models.IntegerField(verbose_name='buruh lelaki')),
                ('female_labor', models.IntegerField(verbose_name='buruh perempuan')),
                ('total_male', models.IntegerField(verbose_name='jumlah lelaki')),
                ('total_female', models.IntegerField(verbose_name='jumlah perempuan')),
                ('total_male_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah upah gaji lelaki')),
                ('total_female_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah upah gaji perempuan')),
                ('male_man_hour', models.IntegerField(verbose_name='jam manusia lelaki')),
                ('female_man_hour', models.IntegerField(verbose_name='jam manusia perempuan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'kontraktor tempatan',
                'verbose_name_plural': 'kontraktor tempatan',
            },
        ),
        migrations.CreateModel(
            name='LocalFinalUses',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('construction_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun pembinaan')),
                ('construction_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai pembinaan')),
                ('dimension_stone_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun batu dimensi')),
                ('dimension_stone_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai batu dimensi')),
                ('cement_making_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun pembuatan simen')),
                ('cement_making_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai pembuatan simen')),
                ('quicklime_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun kapur tohor')),
                ('quicklime_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai kapur tohor')),
                ('calcium_carbonate_powder_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun serbuk kalsium karbonat')),
                ('calcium_carbonate_powder_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai serbuk kalsium karbonat')),
                ('premix_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun premix')),
                ('premix_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai premix')),
                ('ready_mix_concrete_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun konkrit readymix')),
                ('ready_mix_concrete_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai konkrit readymix')),
                ('fertilizer_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun baja')),
                ('fertilizer_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai baja')),
                ('steel_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun industri keluli')),
                ('steel_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai industri keluli')),
                ('hydrated_lime_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun kapur hidrat')),
                ('hydrated_lime_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai kapur hidrat')),
                ('dolomite_powder_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun serbuk dolomit')),
                ('dolomite_powder_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai serbuk dolomit')),
                ('terrazo_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun terazo')),
                ('terrazo_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai terazo')),
                ('other_amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun lain')),
                ('other_worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai lain')),
                ('state_other', models.TextField(blank=True, verbose_name='nyatakan lain')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'kegunaan akhir tempatan',
                'verbose_name_plural': 'kegunaan akhir tempatan',
            },
        ),
        migrations.CreateModel(
            name='LocalOperator',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('male_manager', models.IntegerField(verbose_name='pengurus lelaki')),
                ('female_manager', models.IntegerField(verbose_name='pengurus perempuan')),
                ('male_professional', models.IntegerField(verbose_name='profesional lelaki')),
                ('female_professional', models.IntegerField(verbose_name='profesional perempuan')),
                ('male_technical', models.IntegerField(verbose_name='teknikal lelaki')),
                ('female_technical', models.IntegerField(verbose_name='teknikal perempuan')),
                ('male_clerk', models.IntegerField(verbose_name='kerani lelaki')),
                ('female_clerk', models.IntegerField(verbose_name='kerani perempuan')),
                ('male_labor', models.IntegerField(verbose_name='buruh lelaki')),
                ('female_labor', models.IntegerField(verbose_name='buruh perempuan')),
                ('total_female', models.IntegerField(verbose_name='jumlah perempuan')),
                ('total_male', models.IntegerField(verbose_name='jumlah lelaki')),
                ('total_male_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah upah gaji lelaki')),
                ('total_female_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='jumlah upah gaji perempuan')),
                ('male_man_hour', models.IntegerField(verbose_name='jam manusia lelaki')),
                ('female_man_hour', models.IntegerField(verbose_name='jam manusia perempuan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'operator tempatan',
                'verbose_name_plural': 'operator tempatan',
            },
        ),
        migrations.CreateModel(
            name='OperatingRecord',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('operating_hours', models.IntegerField(verbose_name='jam operasi sehari')),
                ('operating_days', models.IntegerField(verbose_name='bilangan hari operasi')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'rekod operasi',
                'verbose_name_plural': 'rekod operasi',
            },
        ),
        migrations.CreateModel(
            name='Quarry',
            fields=[
                ('lease_holder', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.leaseholder', verbose_name='pemajak')),
                ('name', models.CharField(max_length=255, verbose_name='nama kuari')),
                ('address1', models.CharField(max_length=255, verbose_name='alamat')),
                ('address2', models.CharField(blank=True, max_length=255, verbose_name='alamat (line 2)')),
                ('address3', models.CharField(blank=True, max_length=255, verbose_name='alamat (line 3)')),
                ('location', models.CharField(max_length=255, verbose_name='lokasi')),
                ('mukim', models.CharField(max_length=255, verbose_name='mukim')),
                ('district', models.CharField(max_length=255, verbose_name='daerah')),
                ('state', models.CharField(choices=[('JHR', 'Johor'), ('KDH', 'Kedah'), ('KTN', 'Kelantan'), ('MLK', 'Melaka'), ('NSN', 'Negeri Sembilan'), ('PHG', 'Pahang'), ('PNG', 'Pulau Pinang'), ('PRK', 'Perak'), ('PLS', 'Perlis'), ('SBH', 'Sabah'), ('SWK', 'Sarawak'), ('SGR', 'Selangor'), ('TRG', 'Terengganu'), ('KUL', 'Kuala Lumpur'), ('LBN', 'Labuan'), ('PJY', 'Putrajaya')], max_length=3, verbose_name='negeri')),
                ('grid_reference', models.CharField(max_length=255, verbose_name='rujukan grid')),
                ('max_capacity', models.CharField(max_length=255, verbose_name='keupayaan maksima')),
                ('company_category', models.CharField(choices=[('TUNGGAL', 'TUNGGAL'), ('KONGSI', 'KONGSI'), ('KOPERASI', 'KOPERASI'), ('SDN BHD', 'SDN BHD'), ('BHD', 'BHD')], max_length=255, verbose_name='kategori syarikat')),
                ('status', models.BooleanField(default=True, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'kuari',
                'verbose_name_plural': 'kuari',
            },
        ),
        migrations.CreateModel(
            name='Royalties',
            fields=[
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quarry.data', verbose_name='data')),
                ('royalties', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='royalti')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'royalti',
                'verbose_name_plural': 'royalti',
            },
        ),
        migrations.CreateModel(
            name='SideProductionStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rock_type', models.CharField(choices=[('GRANITE', 'Granit/Granite'), ('LIMESTONE', 'Batu Kapur/Limestone'), ('QUARTZITE', 'Batu Kuartza/Quartzite'), ('SANDSTONE', 'Batu Pasir/Sandstone'), ('TUFF', 'Batu Tuf/tuff'), ('ANDESITE', 'Andesit/Andesite'), ('RHYOLITE', 'Ryolit/Rhyolite'), ('GRAVEL', 'Batu Kelikir/Gravel'), ('SERPENTINITE', 'Serpentinite'), ('GRANODIORITE', 'Granodiorite'), ('PERIDOTITE', 'Peridotite'), ('FELDSPAR', 'Feldspar'), ('DOLOMITE', 'Dolomite'), ('SHALE', 'Shale'), ('MICROTONALITE', 'Microtonalite'), ('GABBRO', 'Gabbro'), ('BASALT', 'Basalt'), ('HORNFELS', 'Hornfels'), ('DOLORITE', 'Dolorite'), ('DIORITE', 'Diorite')], max_length=255, verbose_name='jenis batuan sampingan')),
                ('initial_rock_stock', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='stok awal bulan')),
                ('rock_production', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='pengeluaran')),
                ('total_rock', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='jumlah')),
                ('rock_submission', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='penyerahan')),
                ('final_rock_stock', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='stok akhir')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='side_rocks', to='quarry.data', verbose_name='data')),
            ],
            options={
                'verbose_name': 'perangkaan pengeluaran batuan sampingan',
                'verbose_name_plural': 'perangkaan pengeluaran batuan sampingan',
            },
        ),
        migrations.CreateModel(
            name='SalesSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_size', models.CharField(max_length=255, verbose_name='saiz penyerahan')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='amaun')),
                ('worth', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='nilai')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_submissios', to='quarry.data', verbose_name='data')),
            ],
            options={
                'verbose_name': 'penyerahan jualan',
                'verbose_name_plural': 'penyerahan jualan',
            },
        ),
        migrations.CreateModel(
            name='QuarryManager',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='account.user', verbose_name='user')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lease_holder', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='quarry.leaseholder', verbose_name='pemajak')),
                ('operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managers', to='quarry.operator', verbose_name='pengusaha')),
            ],
            options={
                'verbose_name': 'pengurus kuari',
                'verbose_name_plural': 'pengurus kuari',
            },
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='tajuk')),
                ('comment', models.TextField(blank=True, verbose_name='komen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='others', to='quarry.data', verbose_name='data')),
            ],
            options={
                'verbose_name': 'lain-lain',
                'verbose_name_plural': 'lain-lain',
            },
        ),
        migrations.CreateModel(
            name='MainProductionStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rock_type', models.CharField(choices=[('GRANITE', 'Granit/Granite'), ('LIMESTONE', 'Batu Kapur/Limestone'), ('QUARTZITE', 'Batu Kuartza/Quartzite'), ('SANDSTONE', 'Batu Pasir/Sandstone'), ('TUFF', 'Batu Tuf/tuff'), ('ANDESITE', 'Andesit/Andesite'), ('RHYOLITE', 'Ryolit/Rhyolite'), ('GRAVEL', 'Batu Kelikir/Gravel'), ('SERPENTINITE', 'Serpentinite'), ('GRANODIORITE', 'Granodiorite'), ('PERIDOTITE', 'Peridotite'), ('FELDSPAR', 'Feldspar'), ('DOLOMITE', 'Dolomite'), ('SHALE', 'Shale'), ('MICROTONALITE', 'Microtonalite'), ('GABBRO', 'Gabbro'), ('BASALT', 'Basalt'), ('HORNFELS', 'Hornfels'), ('DOLORITE', 'Dolorite'), ('DIORITE', 'Diorite')], max_length=255, verbose_name='jenis batuan utama')),
                ('initial_rock_stock', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='stok awal bulan')),
                ('rock_production', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='pengeluaran')),
                ('total_rock', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='jumlah')),
                ('rock_submission', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='penyerahan')),
                ('final_rock_stock', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='stok akhir')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_rocks', to='quarry.data', verbose_name='data')),
            ],
            options={
                'verbose_name': 'perangkaan pengeluaran batuan utama',
                'verbose_name_plural': 'perangkaan pengeluaran batuan utama',
            },
        ),
        migrations.AddField(
            model_name='data',
            name='manager',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mine_data', to='quarry.quarrymanager', verbose_name='pengusaha'),
        ),
        migrations.CreateModel(
            name='DailyExplosive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='tarikh')),
                ('emulsion_explosive', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='bahan letupan bes emulsi')),
                ('ng_explosive', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='bahan letupan bes ng')),
                ('other_explosive', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='bahan letupan lain')),
                ('detonator', models.IntegerField(verbose_name='peledak biasa')),
                ('electric_detonator', models.IntegerField(verbose_name='peledak elektrik')),
                ('non_electric_detonator', models.IntegerField(verbose_name='peledak non elektrik')),
                ('safety_fuse', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='safety fuse')),
                ('detonating_cord', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='kord peledak')),
                ('anfo', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='ANFO')),
                ('bulk_emulsion', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='bulk emulsion')),
                ('relay_tld', models.IntegerField(verbose_name='relay TLD')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_explosives', to='quarry.data', verbose_name='data')),
            ],
            options={
                'verbose_name': 'bahan letupan harian',
                'verbose_name_plural': 'bahan letupan harian',
            },
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_comment', models.TextField(blank=True, verbose_name='state comment')),
                ('state_approved', models.BooleanField(blank=True, null=True, verbose_name='state approved')),
                ('admin_comment', models.TextField(blank=True, verbose_name='admin comment')),
                ('admin_approved', models.BooleanField(blank=True, null=True, verbose_name='admin approved')),
                ('hq_comment', models.TextField(blank=True, verbose_name='hq comment')),
                ('hq_approved', models.BooleanField(blank=True, null=True, verbose_name='hq approved')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_inspector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quarry_admin_inspected', to=settings.AUTH_USER_MODEL, verbose_name='admin inspector')),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='quarry.data', verbose_name='data')),
                ('hq_inspector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quarry_hq_inspected', to=settings.AUTH_USER_MODEL, verbose_name='hq inspector')),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quarry_requested', to=settings.AUTH_USER_MODEL, verbose_name='requestor')),
                ('state_inspector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quarry_state_inspected', to=settings.AUTH_USER_MODEL, verbose_name='state inspector')),
            ],
        ),
        migrations.CreateModel(
            name='SideRock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rock_type', models.CharField(choices=[('GRANITE', 'Granit/Granite'), ('LIMESTONE', 'Batu Kapur/Limestone'), ('QUARTZITE', 'Batu Kuartza/Quartzite'), ('SANDSTONE', 'Batu Pasir/Sandstone'), ('TUFF', 'Batu Tuf/tuff'), ('ANDESITE', 'Andesit/Andesite'), ('RHYOLITE', 'Ryolit/Rhyolite'), ('GRAVEL', 'Batu Kelikir/Gravel'), ('SERPENTINITE', 'Serpentinite'), ('GRANODIORITE', 'Granodiorite'), ('PERIDOTITE', 'Peridotite'), ('FELDSPAR', 'Feldspar'), ('DOLOMITE', 'Dolomite'), ('SHALE', 'Shale'), ('MICROTONALITE', 'Microtonalite'), ('GABBRO', 'Gabbro'), ('BASALT', 'Basalt'), ('HORNFELS', 'Hornfels'), ('DOLORITE', 'Dolorite'), ('DIORITE', 'Diorite')], max_length=255, verbose_name='jenis batuan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quarry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='side_rocks', to='quarry.quarry', verbose_name='quarry')),
            ],
            options={
                'verbose_name': 'batuan sampingan',
                'verbose_name_plural': 'batuan sampingan',
            },
        ),
        migrations.AddField(
            model_name='quarry',
            name='manager',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='quarry.quarrymanager', verbose_name='pengurus'),
        ),
        migrations.AddField(
            model_name='quarry',
            name='operator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quarries', to='quarry.operator', verbose_name='pengusaha'),
        ),
        migrations.CreateModel(
            name='MainRock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rock_type', models.CharField(choices=[('GRANITE', 'Granit/Granite'), ('LIMESTONE', 'Batu Kapur/Limestone'), ('QUARTZITE', 'Batu Kuartza/Quartzite'), ('SANDSTONE', 'Batu Pasir/Sandstone'), ('TUFF', 'Batu Tuf/tuff'), ('ANDESITE', 'Andesit/Andesite'), ('RHYOLITE', 'Ryolit/Rhyolite'), ('GRAVEL', 'Batu Kelikir/Gravel'), ('SERPENTINITE', 'Serpentinite'), ('GRANODIORITE', 'Granodiorite'), ('PERIDOTITE', 'Peridotite'), ('FELDSPAR', 'Feldspar'), ('DOLOMITE', 'Dolomite'), ('SHALE', 'Shale'), ('MICROTONALITE', 'Microtonalite'), ('GABBRO', 'Gabbro'), ('BASALT', 'Basalt'), ('HORNFELS', 'Hornfels'), ('DOLORITE', 'Dolorite'), ('DIORITE', 'Diorite')], max_length=255, verbose_name='jenis batuan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quarry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_rocks', to='quarry.quarry', verbose_name='quarry')),
            ],
            options={
                'verbose_name': 'batuan utama',
                'verbose_name_plural': 'batuan utama',
            },
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_lot', models.CharField(max_length=255, verbose_name='no lot')),
                ('land_status', models.CharField(choices=[('TANAH KERAJAAN', 'Tanah Kerajaan'), ('TANAH TUAN PUNYA', 'Tanah Tuan Punya')], max_length=255, verbose_name='status tanah')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quarry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lots', to='quarry.quarry', verbose_name='quarry')),
            ],
            options={
                'verbose_name': 'lot kuari',
                'verbose_name_plural': 'lot kuari',
            },
        ),
        migrations.AddField(
            model_name='data',
            name='quarry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data', to='quarry.quarry', verbose_name='kuari'),
        ),
    ]
